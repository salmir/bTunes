-- Artist --
CREATE TABLE Artist (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(200) NOT NULL,
  biography VARCHAR(8000),
  image VARCHAR(200)
);

-- Album --
CREATE TABLE Album (
  id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(200) NOT NULL,
  release_year INTEGER NOT NULL,
  artist_id INTEGER REFERENCES Artist(id),
  cover VARCHAR(300)
);

--  Song  --
CREATE TABLE Song (
  id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
  filepath VARCHAR(300) NOT NULL,
  name VARCHAR(200) NOT NULL,
  length BIGINT NOT NULL,
  artist_id INTEGER REFERENCES Artist(id),
  album_id INTEGER REFERENCES Album(id),
  genre VARCHAR(100),
  rating INTEGER CHECK((rating IS -1) OR (rating BETWEEN 1 AND 5)),
  lyrics VARCHAR(8000)
);

--  Playlist --
CREATE TABLE Playlist (
  id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(200) NOT NULL
);

--  PlaylistSongs --
CREATE TABLE Playlist_Songs (
  playlist_id INTEGER REFERENCES Playlist(id) ON DELETE CASCADE ON UPDATE CASCADE,
  song_id INTEGER REFERENCES Song(id) ON DELETE CASCADE ON UPDATE CASCADE,
  priority INTEGER NOT NULL
);

--  Statistic  --
CREATE TABLE Statistic(
  id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
  date TIMESTAMP,
  song_id INTEGER
);